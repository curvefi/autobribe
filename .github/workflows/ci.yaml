name: CI Workflow

on: [push]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python 3.12.6
        uses: actions/setup-python@v5
        with:
          python-version: 3.12.6
      - uses: pre-commit/action@v3.0.1

  setup_poetry:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python 3.12.6
        uses: actions/setup-python@v5
        with:
          python-version: 3.12.6
      - name: Cache Poetry Environment
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Setup Poetry and Install Dependencies
        run: |
          pip install "poetry>=1.8,<2.0"
          poetry config virtualenvs.in-project true
          poetry install --no-interaction


  pytest:
    needs: setup_poetry
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        test_type:
          - unitary
          - hypothesis
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python and Restore Environment
        uses: actions/setup-python@v5
        with:
          python-version: 3.12.6
      - name: Restore Poetry Environment
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Run Pytest
        env:
          ETH_RPC_URL: ${{ secrets.ETH_RPC_URL }}
        run: poetry run pytest --numprocesses=auto --dist=loadscope tests/${{ matrix.test_type }}


  foundry_tests:
    needs: setup_poetry
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python and Restore Environment
        uses: actions/setup-python@v5
        with:
          python-version: 3.12.6
      - name: Restore Poetry Environment
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
      - name: Install Forge-std
        run: forge install foundry-rs/forge-std --no-commit
      - name: Run Foundry Tests
        env:
          ETH_RPC_URL: ${{ secrets.ETH_RPC_URL }}
        run: forge test --match-path "tests/integration/*"
